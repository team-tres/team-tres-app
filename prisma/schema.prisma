// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // for local development
    url      = env("DATABASE_URL")
    // for Vercel
    // url       = env("POSTGRES_PRISMA_URL")
    // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
    CLIENT
    ADMIN
    ANALYST
    AUDITOR
}

model User {
    id       Int    @id @default(autoincrement())
    email    String @unique
    username String @unique
    password String
    role     Role   @default(CLIENT)
    companyId   Int?     // Foreign key to Company model
    company     Company? @relation(fields: [companyId], references: [id]) // Connects User to a Company
}

model Company {
    id   Int    @id @default(autoincrement())
    name String @unique
}

enum Condition {
    excellent
    good
    fair
    poor
}

model Stuff {
    id        Int       @id @default(autoincrement())
    name      String
    quantity  Int
    condition Condition
    income    Float
    owner     String
}

model IncomeStatement {
    id                          Int   @id @default(autoincrement())
    // companyId                Int
    year                        Int
    revenue                     Float
    costOfContracting           Float
    overhead                    Float
    salariesAndBenefits         Float
    rentAndOverhead             Float
    depreciationAndAmortization Float
    interest                    Float
    interestIncome              Float
    gainOnDisposalOfAssets      Float
    otherIncome                 Float
    incomeTaxes                 Float

    // company                  Company  @relation(fields: [companyId], references: [id])
}

model BalanceSheet {
    id                        Int   @id @default(autoincrement())
    // companyId                Int
    year                      Int
    cashAndCashEquivalents    Float
    accountsReceivable        Float
    inventory                 Float
    propertyPlantAndEquipment Float
    investment                Float
    accountsPayable           Float
    longDebtService           Float
    taxesPayable              Float
    currentDebtService        Float
    loansPayable              Float
    equityCapital             Float
    retainedEarnings          Float

    // company                  Company  @relation(fields: [companyId], references: [id])
}

model Company {
    id    Int    @id @default(autoincrement())
    name  String
    email String
}
