// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // for local development
    url      = env("DATABASE_URL")
    // for Vercel
    // url       = env("POSTGRES_PRISMA_URL")
    // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
    CLIENT
    ADMIN
    ANALYST
    AUDITOR
}

model User {
    id         Int     @id @default(autoincrement())
    email      String  @unique
    username   String  @unique
    password   String
    role       Role    @default(CLIENT)
    companyId  Int?
    status     Boolean
    companyIni String?

    company               Company?               @relation(fields: [companyId], references: [id])
    financialCompilations FinancialCompilation[]
}

enum Condition {
    excellent
    good
    fair
    poor
}

model Stuff {
    id        Int       @id @default(autoincrement())
    name      String
    quantity  Int
    condition Condition
    income    Float
    owner     String
}

model FinancialCompilation {
    id        Int @id @default(autoincrement())
    companyId Int
    year      Int
    userId    Int

    // Income Statement
    revenue                        Int
    netSales                       Int
    costOfContracting              Int
    overhead                       Int
    costOfGoodsSold                Int
    grossProfit                    Int
    grossMarginPercentage          Float
    salariesAndBenefits            Int
    rentAndOverhead                Int
    depreciationAndAmortization    Int
    interest                       Int
    totalOperatingExpenses         Int
    operatingExpensesPercentage    Float
    profitFromOperations           Int
    profitFromOperationsPercentage Float
    interestIncome                 Int
    interestExpense                Int
    gainOnDisposalOfAssets         Int
    otherIncome                    Int
    totalOtherIncome               Int
    totalOtherIncomePercentage     Float
    incomeBeforeIncomeTaxes        Int
    pretaxIncomePercentage         Float
    incomeTaxes                    Int
    netIncome                      Int
    netIncomePercentage            Float

    // BalanceSheet
    totalAssets               Int
    cashAndCashEquivalents    Int
    accountsReceivable        Int
    inventory                 Int
    totalCurrentAssets        Int
    propertyPlantAndEquipment Int
    investment                Int
    totalLongTermAssets        Int
    accountsPayable           Int
    longDebtService           Int
    taxesPayable              Int
    totalCurrentLiabilities   Int
    currentDebtService        Int
    loansPayable              Int
    totalLongTermLiabilities  Int
    totalLiabilities          Int
    equityCapital             Int
    retainedEarnings          Int
    totalStockholdersEquity   Int
    totalLiabilitiesAndEquity Int

    company Company @relation(fields: [companyId], references: [id])
    user    User    @relation(fields: [userId], references: [id])
}

model Company {
    id    Int    @id @default(autoincrement())
    name  String @unique
    users User[]

    FinancialCompilation FinancialCompilation[]
}
